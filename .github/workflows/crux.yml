name: Run Tests with PostgreSQL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.2-alpine3.21
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DB_USER }}"
          --health-timeout=5s
          --health-start-period=10s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.5'

      - name: Install dependencies
        run: |
          go get -d -v ./...

      - name: Build and run
        run: |
          go build -o crux
          CRUX_API_KEY="${{ secrets.CRUX_API_KEY }}" \
          DB_HOST="localhost" \
          DB_PORT="5432" \
          DB_USER="${{ secrets.DB_USER }}" \
          DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
          DB_NAME="${{ secrets.DB_NAME }}" \
          ./crux

      - name: Query database
        run: |
          sleep 10
          psql -h localhost -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -c "SELECT * FROM crux_metrics;"


      - name: Cleanup PostgreSQL container
        run: |
          docker ps -q --filter "ancestor=postgres:17.2-alpine3.21" | xargs -r docker stop
          docker ps -a -q --filter "ancestor=postgres:17.2-alpine3.21" | xargs -r docker rm
      
